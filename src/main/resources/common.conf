
// ==============================
//       系统 Processor
// ==============================

timeout = 1000ms
// 基础processor，请继承这个配置
basic {
  timeout = ${timeout}
  processorSwitch = true
}
// 用于调度，请不要覆盖 class
// 需要指定 children
serial = ${basic}{
  class = com.epilogue.framework.processor.core.Serial
  children = []
}
// 用于调度，请不要覆盖 class
// 需要指定 children 和 merger
parallel = ${basic}{
  class = com.epilogue.framework.processor.core.Parallel
  children = []
  merger = ${basic}{class = com.epilogue.framework.processor.basic.BasicMerger}
}
// 用于调度，请不要覆盖 class
// 需要指定 condition 和 cases
// 用法如下（condition的最终返回值务必是String，可继承自ConditionProcessor，也可以是自定义的子Chain）：
// switch = ${basic}{
//   class = com.epilogue.framework.processor.core.Switch
//   condition = ${basic} {class = xx.xx.ConditionProcessor} 继承自ConditionProcessor
//   cases = {
//     stringA = ${serial}{}
//     stringB = ${parallel}{}
//   }
// }
switch = ${basic}{
  class = com.epilogue.framework.processor.core.Switch
  condition = {}
  cases = {}
}
// 用于调度，请不要覆盖 class
// 需要指定 selector、subChain 和 merger
chain = ${basic}{
  class = com.epilogue.framework.processor.core.SubChain
  selector = {}
  subChain = {}
  merger = ${basic}{class = com.epilogue.framework.processor.basic.BasicMerger}
}
// 用于调度，请不要覆盖 class
composedContextParallel = ${basic}{
  class = com.epilogue.framework.processor.core.ComposedContextParallel
  chain = ${basic}
}